Information Services

Core Objective: Set up an AI-backed news portal network that is narrative intelligent, self-learning, self-sustaining, scalable, multilingual, and fully automated. We are building a strategic media machine with intelligence, memory, editorial strength, and counter-narrative capabilities.
Phase-Wise Goals

Phase 1: Learning Context The Model requires to start learning from self before feeding RSS feeds.
The system needs to be able to understand whether an article is relevant, if it has narrative potential & if it is a threat, opportunity or neutral for the client The system should generate semantic embeddings (AI memory) from the uploaded articles The system needs to be able to classify any article based on demographic segmentation and analyse its story as well as sentiment.
The system should classify and cluster the input articles into multiple folders and tag narrative docs to articles.
The system should auto-load at a predefined time every day to learn the articles uploaded in the last 24 hours. (Which can be smaller durations as well)

*All the input articles and narratives can be in .txt or .md file format. Direct links can be pasted from a few news portals that follow WebP standard.

Phase 2: Learning the Reasoning The system needs to be able to pick whether it should move forward on the story based on segmentation & core context The system should cluster the articles and reason whether it fits the narrative to write or not.

Phase 3: Learning the Tone The system should start writing based on the tone of sample articles and human-like language, Understand the sentence style, structure, tone, and keywords from each input The system should perfect the many narrative spins on articles.
The system should be able to create multiple results for each input article/ prompt if required.
The system should show output article options to choose from (Which later will be automated as we select specific formats) The system should learn from the inputs of our preferred articles + from biased competitors The system should mimic - analyse - counter with preferred tone & patterns The system will evolve into a thinking editorial agent which will write intelligent counter-articles (attack, expose, reframe)

Phase 4: Setting Target Audience/ Rich Category based storage (Enhanced Memory) The system should learn various target groups and tag the output articles according to the target audience The system should classify each output into certain narratives it has already learned The system should capture narrative impact, which stories resonated with which segments and why.
Add human-like vocabulary and spin.

Phase 5: News Article Automation The system should connect with an RSS feed and read inputs and cluster them accordingly.
The system should pick the clusters as per the narrative prompts of the day or the total narrative docs fed regularly The system should pick the narrative tone (Negative, Positive, Neutral) to rewrite articles The system should pick context-worthy keywords and include them in the article Writing SEO rich articles and adding relevant images from a predefined gallery, Wikimedia Commons, or scraping images from the source article. (This section needs to be connected to an instance that can handle image optimisation) Connecting to WordPress - identifying relevant categories - relevant tags - uploading articles in approved format.
Updating the links of articles with context in a Google sheet for some manual checkups on quality.

Phase 6: Translation + Regional Tuning The system should become multilingual using regional language models from IndicTrans2, M2M100 or similar models.
The system should be able to manage being connected to multiple websites with target languages In this phase, we will also start feeding narrative docs and sample articles in local languages.

Phase 7: Self-Improving Narrative fine-tuning The system should start populating article metrics to the output and learn which type of articles work Adapting to prompts that fit on an ad-hoc basis.
The system should start generating and testing narratives on its own (based on new articles from rss feeds or prompts).

The system will work on the following infrastructure: LLM engine (Llama 2.0 on local at first - Use Mistral in production server) A streamlit dashboard for the admin Python 3.13 as interpreter Regional language support through IndicTrans2 or M2M100 Vector Database feeding the brain of the Model Pandas for file reading, logging and later storing output logs in a vector Database We can set category rules to keep the model in check.:

Input | Purpose

News Article (Headline + Body in .txt format) | Raw content to analyze

List of Broad Demographic Segments | Predefined voter groups for classification

List of Sentiments to Activate | Report Leaning towards (Left, Right, Neutral)

Definition of Relevance | A simple guideline or logic for what is "politically relevant" to your client

Examples of Threat / Opportunity / Neutral | Examples to help the AI recognize the polarity of articles

Feed Narrative Documents | Train the model to do the sentiment analysis based on the narrative docs

Category | Behaviour

Politics | Apply a strong narrative, take a position
Fact-checking if required (Model will pick up the claims/ prompt based)

Culture | Align with values, promote selectively

Apolitical | Reframe gently, write neutral/filler tone

Breaking or Prompt-based | Push fast, but within narrative bounds